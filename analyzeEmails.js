require('dotenv').config();
const fs = require('fs');
const path = require('path');
const axios = require('axios');
const FormData = require('form-data');



function analyzeEmails(mailDir) {
    return new Promise((resolve, reject) => {
  
      const apiKey = process.env.VIRUSTOTAL_API_KEY;
  
      fs.readdir(mailDir, (err, files) => {
        if (err) {
          reject('Error reading the directory: ' + err);
          return;
        }
  
        let analysisPromises = files.map(file => {
          return new Promise((resolveFile, rejectFile) => {
            const filePath = path.join(mailDir, file);
            const formData = new FormData();
            formData.append('file', fs.createReadStream(filePath));
            const url = `https://www.virustotal.com/api/v3/files`; // URL pour soumettre les fichiers
  
            axios.post(url, formData, {
              headers: {
                'x-apikey': apiKey,
                ...formData.getHeaders()
              }
            })
            .then(({ data }) => {
              // Stocker l'objet data dans une variable
              const analyzedData = data.data;
              analyzedData.fileName = file;

  
              // Résoudre la promesse avec l'objet data
              resolveFile(analyzedData);
            })
            .catch(err => {
              console.error(`Error during the file submission for ${file}`, err);
              rejectFile(err);
            });
          });
        });
  
        // Résoudre la promesse principale une fois toutes les analyses terminées
        Promise.all(analysisPromises).then(results => resolve(results)).catch(reject);
      });
    });
  }
  
  


module.exports = analyzeEmails;
